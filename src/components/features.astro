---
import { Icon } from "astro-icon/components";
import ContentSection from "~/components/content-section.astro";
import type { FeatureItem } from "~/types";

const features: Array<FeatureItem> = [
  {
    title: "E-Commerce",
    description: "Diseño y desarrollo de tiendas online adaptadas a tu marca.",
    icon: "mdi:storefront",
    color: "linear-gradient(135deg, #5e17eb, #070019)",
  },
  {
    title: "Personalizadas",
    description: "Creamos sitios web a medida utilizando las últimas tecnologías y frameworks.",
    icon: "mdi:code-braces",
    color: "linear-gradient(135deg, #5e17eb, #070019)",
  },
  {
    title: "IA Integración",
    description: "Integramos IA en tus servicios para experiencias personalizadas y automatizadas.",
    icon: "mdi:brain",
    color: "linear-gradient(135deg, #5e17eb, #070019)",
  },
  {
    title: "SEO Optimizado",
    description: "Optimización avanzada para SEO, mejorando tu posicionamiento web.",
    icon: "mdi:search-web",
    color: "linear-gradient(135deg, #5e17eb, #070019)",
  },
  {
    title: "Hosting",
    description: "Servicios personalizados de hosting y dominios optimizados.",
    icon: "mdi:server",
    color: "linear-gradient(135deg, #5e17eb, #070019)",
  },
];
---

<ContentSection title="" id="features">
  <div class="max-w-7xl mx-auto flex flex-col sm:flex-row items-start justify-start fade-in">
    <div class="w-full sm:w-2/4 text-left fade-in">
      <h1 class="text-4xl font-semibold leading-tight sm:text-5xl md:text-6xl fade-in max-w-[90%]">
        Descubre las soluciones que ofrecemos para
        <span class="text-primary whitespace-normal fade-in sm:inline">
          tu negocio
        </span>
      </h1>
    </div>
  </div>
  <div class="palette fade-in">
    {features.map(({ title, icon, description, color }) => (
      <div class="color fade-in" style={`background: ${color};`}>
        <Icon name={icon} class="icon fade-in" />
        <p class="description fade-in">{description}</p>
      </div>
    ))}
  </div>
</ContentSection>

<style>
.fade-in {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.8s ease-out, transform 0.8s ease-out;
}

.fade-in.visible {
  opacity: 1;
  transform: translateY(0);
}

@media (max-width: 768px) {
  .fade-in {
    transform: translateY(15px);
    transition: opacity 1s ease-out, transform 1s ease-out;
  }
}
.palette {
  display: flex;
  flex-direction: row;
  height: 300px;
  width: 100%;
  border-radius: 15px;
  overflow: hidden;
  margin: 20px 0;
}

.color {
  height: 100%;
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  padding-top: 50px;
  color: white;
  font-weight: 600;
  letter-spacing: 1px;
  position: relative;
  overflow: hidden;
  transition: all 0.5s ease;
  box-sizing: border-box;
}

.icon {
  font-size: 4rem;
  margin-bottom: 10px;
  transition: transform 0.5s ease, opacity 0.5s ease;
  opacity: 0.85;
}

.color span {
  position: absolute;
  top: 20px;
  opacity: 0;
  font-size: 1.1rem;
  text-transform: uppercase;
  font-weight: 700;
  letter-spacing: 1.5px;
  transition: opacity 0.6s ease, transform 0.6s ease;
}

.description {
  font-size: 0.95rem;
  line-height: 1.6;
  margin-top: auto;
  margin-bottom: 70px;
  opacity: 0;
  transform: translateY(25px);
  transition: opacity 0.8s ease, transform 0.8s ease;
  padding: 0 15px;
  text-align: center;
  font-weight: 400;
}

.color:hover {
  transform: scale(1.05);
  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
}

.color:hover .icon {
  transform: translateY(-10px) scale(1.15);
  opacity: 1;
}

.color:hover span {
  opacity: 1;
  transform: translateY(-5px);
}

.color:hover .description {
  opacity: 1;
  transform: translateY(0);
}

@media (max-width: 768px) {
  .palette {
    flex-direction: column;
    height: auto;
  }

  .color {
    width: 100%;
    height: 220px;
    padding-top: 40px;
    margin-bottom: 10px;
  }

  .icon {
    font-size: 3rem;
  }
}
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const observer = new IntersectionObserver((entries, observer) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
          observer.unobserve(entry.target);
        }
      });
    }, { rootMargin: "0px 0px -50px 0px", threshold: 0.2 });

    document.querySelectorAll('.fade-in').forEach(section => {
      observer.observe(section);
    });
  });
</script>
